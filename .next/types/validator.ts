// This file is generated automatically by Next.js
// Do not edit this file manually
// This file validates that all pages and layouts export the correct types

import type { AppRoutes, LayoutRoutes, ParamMap } from "./routes.js"
import type { ResolvingMetadata, ResolvingViewport } from "next/dist/lib/metadata/types/metadata-interface.js"

type AppPageConfig<Route extends AppRoutes = AppRoutes> = {
  default: React.ComponentType<{ params: Promise<ParamMap[Route]> } & any> | ((props: { params: Promise<ParamMap[Route]> } & any) => React.ReactNode | Promise<React.ReactNode> | never | void | Promise<void>)
  generateStaticParams?: (props: { params: ParamMap[Route] }) => Promise<any[]> | any[]
  generateMetadata?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingMetadata
  ) => Promise<any> | any
  generateViewport?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingViewport
  ) => Promise<any> | any
  metadata?: any
  viewport?: any
}

type LayoutConfig<Route extends LayoutRoutes = LayoutRoutes> = {
  default: React.ComponentType<LayoutProps<Route>> | ((props: LayoutProps<Route>) => React.ReactNode | Promise<React.ReactNode> | never | void | Promise<void>)
  generateStaticParams?: (props: { params: ParamMap[Route] }) => Promise<any[]> | any[]
  generateMetadata?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingMetadata
  ) => Promise<any> | any
  generateViewport?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingViewport
  ) => Promise<any> | any
  metadata?: any
  viewport?: any
}


// Validate ../../src/app/deals/page.tsx
{
  const handler = {} as typeof import("../../src/app/deals/page.js")
  handler satisfies AppPageConfig<"/deals">
}

// Validate ../../src/app/page.tsx
{
  const handler = {} as typeof import("../../src/app/page.js")
  handler satisfies AppPageConfig<"/">
}

// Validate ../../src/app/privacy-policy/page.tsx
{
  const handler = {} as typeof import("../../src/app/privacy-policy/page.js")
  handler satisfies AppPageConfig<"/privacy-policy">
}

// Validate ../../src/app/refund-policy/page.tsx
{
  const handler = {} as typeof import("../../src/app/refund-policy/page.js")
  handler satisfies AppPageConfig<"/refund-policy">
}

// Validate ../../src/app/servicedetails/page.tsx
{
  const handler = {} as typeof import("../../src/app/servicedetails/page.js")
  handler satisfies AppPageConfig<"/servicedetails">
}

// Validate ../../src/app/services/page.tsx
{
  const handler = {} as typeof import("../../src/app/services/page.js")
  handler satisfies AppPageConfig<"/services">
}

// Validate ../../src/app/terms-and-conditions/page.tsx
{
  const handler = {} as typeof import("../../src/app/terms-and-conditions/page.js")
  handler satisfies AppPageConfig<"/terms-and-conditions">
}

// Validate ../../src/app/user/editprofile/page.tsx
{
  const handler = {} as typeof import("../../src/app/user/editprofile/page.js")
  handler satisfies AppPageConfig<"/user/editprofile">
}

// Validate ../../src/app/user/page.tsx
{
  const handler = {} as typeof import("../../src/app/user/page.js")
  handler satisfies AppPageConfig<"/user">
}

// Validate ../../src/app/user/profile/page.tsx
{
  const handler = {} as typeof import("../../src/app/user/profile/page.js")
  handler satisfies AppPageConfig<"/user/profile">
}

// Validate ../../src/app/user/purchasehistory/page.tsx
{
  const handler = {} as typeof import("../../src/app/user/purchasehistory/page.js")
  handler satisfies AppPageConfig<"/user/purchasehistory">
}

// Validate ../../src/app/user/settings/page.tsx
{
  const handler = {} as typeof import("../../src/app/user/settings/page.js")
  handler satisfies AppPageConfig<"/user/settings">
}







// Validate ../../src/app/layout.tsx
{
  const handler = {} as typeof import("../../src/app/layout.js")
  handler satisfies LayoutConfig<"/">
}

// Validate ../../src/app/user/layout.tsx
{
  const handler = {} as typeof import("../../src/app/user/layout.js")
  handler satisfies LayoutConfig<"/user">
}
